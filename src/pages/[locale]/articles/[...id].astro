---
import { getCollection, getEntries, render } from "astro:content";
import type { CollectionEntry } from "astro:content";
import type { GetStaticPaths, InferGetStaticPropsType } from "astro";
import { Fragment } from "react";
import { type Locale, locales } from "../../../i18n";
import Layout from "../../../layouts/Layout.astro";
import { getArticleFilter } from "../../../utils/articleFilter";

export const getStaticPaths = (async () => {
  const allArticles = await getCollection("articles", getArticleFilter({ published: true }));
  return (Object.keys(locales) as Locale[]).flatMap((locale) =>
    allArticles
      .filter((article) => article.data.locale === locale)
      .map((article) => {
        return {
          params: { locale, id: article.id },
          props: { locale, article },
        };
      }),
  );
}) satisfies GetStaticPaths;

const { article } = Astro.props as InferGetStaticPropsType<typeof getStaticPaths>;
const { Content, headings } = await render(article);
const { title, locale, links, tags } = article.data;
const linkedArticles = await getCollection('articles', (article) => links?.includes(article.data.nr))
---

<Layout title={title}>
  <article
    class="bg-amber-200 p-5 lg:p-10 rounded-xl text-stiftung-900 shadow-xl"
  >
    <h1 class="text-4xl font-bold mb-5 text-stiftung-900">{title}</h1>
    <div class="hidden">
      {tags?.map((tag) => <h2>{tag}</h2>)}
    </div>
    <div
      class="prose-p:mb-4 prose-p:leading-relaxed
             prose-h2:text-2xl prose-h2:font-bold prose-h2:mb-4
             prose-h3:text-xl prose-h3:font-bold prose-h3:mb-4
             prose-h4:text-lg prose-h4:font-bold prose-h4:mb-4
             prose-ul:list-disc prose-ul:pl-6 prose-ul:mb-4
             prose-li:mb-1 prose-a:underline my-8"
    >
      <Content />
    </div>
    <ul>
      {
        linkedArticles.map((linkedArticle) => (
          <li class="text-base inline-block m-1 bg-rust-200 p-1 rounded-handdrawn border-2 border-rust-600">
            <a
              href={`/${locale}/articles/${linkedArticle.id?.toLowerCase()}`}
            >
              {linkedArticle.data?.title}
            </a>
          </li>
        ))
      }
    </ul>
  </article>
</Layout>
