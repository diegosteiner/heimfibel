---
import { getCollection, type CollectionEntry } from "astro:content";
import Layout from "./Layout.astro";
import { ArticleList } from "../components/ArticleLinks";
import allTags from "../content/tags/index.json";
import type { Tag } from "../content/tags";

type Article = CollectionEntry<"articles">;
type Props = Article;

const article = Astro.props;
const { title, locale } = article.data;
const articles = await getCollection("articles");
const links =
  article.data.links
    ?.map((link) => articles.find((article) => article.data.id == link))
    .filter((article): article is Article => !!article) || [];

const tags = article.data.tags
  ?.map((tag) => allTags.find((t) => tag.toLowerCase() === t.id))
  ?.filter((tag): tag is Tag => !!tag);
---

<Layout title={title}>
  <article>
    <h1>{title}</h1>
    <slot />
    <ul class="tags">
      {
        tags?.map((tag) => (
          <li>
            <a href={`/${locale}/tags/${tag?.id}`}>{tag.label}</a>
          </li>
        ))
      }
    </ul>
    <h4>Weiterst√∂bern</h4>
    <ArticleList client:load articles={links} locale={locale} />
  </article>
</Layout>

<style lang="scss">
  article {
    background-color: var(--color-fg);
    color: var(--color-black);
    padding: 2.5em;
    border-radius: 2em;
    font-size: 1.2rem;
    line-height: 1.66em;
  }

  .tags {
    list-style: none;
    padding: 0;
    margin: 2em 0;

    & > li {
      display: inline-block;
      margin: 0.2em;

      & > a {
        font-size: 1rem;
        background-color: peachpuff;
        padding: 0.33em;
        text-decoration: none;
        color: var(--color-black);
        border: 2px solid palevioletred;
        border-radius: var(--handdrawn-border-radius);
      }
    }
  }
</style>
